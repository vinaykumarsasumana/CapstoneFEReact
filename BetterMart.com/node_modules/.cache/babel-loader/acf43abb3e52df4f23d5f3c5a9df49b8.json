{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  loggedIn: false,\n  userDetails: {}\n};\n\nconst loginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loggedIn: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"checkLoginStatus\") {\n    return {\n      loggedIn: state.loggedIn\n    };\n  }\n\n  if (action.type === \"setLogin\") {\n    return {\n      loggedIn: state.loggedIn = true\n    };\n  }\n\n  if (action.type === \"clearLogin\") {\n    return {\n      loggedIn: state.loggedIn = false\n    };\n  }\n\n  return state;\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    userDetails: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"checkUserDetails\") {\n    return {\n      userDetails: state.userDetails\n    };\n  }\n\n  if (action.type === \"addUserDetails\") {\n    return {\n      userDetails: state.userDetails = action.userDetails\n    };\n  }\n\n  if (action.type === \"clearUserDetails\") {\n    return {\n      userDetails: state.userDetails = {}\n    };\n  }\n\n  return state;\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"getCartItems\") {\n    return {\n      cartItems: state.cartItems\n    };\n  }\n\n  if (action.type === \"addCartItems\") {\n    return {\n      cartItems: state.cartItems = action.item\n    };\n  }\n\n  if (action.type === \"clearCartItems\") {\n    return {\n      cartItems: state.cartItems = []\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(loginReducer, userReducer, cartReducer);\nexport default store;","map":{"version":3,"sources":["C:/Siddharth/Test Codes/react/capstone/ecommerce_main/src/store/index.js"],"names":["createStore","initialState","loggedIn","userDetails","loginReducer","state","action","type","userReducer","cartReducer","cartItems","item","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE,KAAZ;AAAmBC,EAAAA,WAAW,EAAE;AAAhC,CAArB;;AAEA,MAAMC,YAAY,GAAG,YAAyC;AAAA,MAAxCC,KAAwC,uEAAhC;AAAEH,IAAAA,QAAQ,EAAE;AAAZ,GAAgC;AAAA,MAAXI,MAAW;;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AACtC,WAAO;AACLL,MAAAA,QAAQ,EAAEG,KAAK,CAACH;AADX,KAAP;AAGD;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLL,MAAAA,QAAQ,EAAGG,KAAK,CAACH,QAAN,GAAiB;AADvB,KAAP;AAGD;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLL,MAAAA,QAAQ,EAAGG,KAAK,CAACH,QAAN,GAAiB;AADvB,KAAP;AAGD;;AACD,SAAOG,KAAP;AACD,CAjBD;;AAkBA,MAAMG,WAAW,GAAG,YAAyC;AAAA,MAAxCH,KAAwC,uEAAhC;AAAEF,IAAAA,WAAW,EAAE;AAAf,GAAgC;AAAA,MAAXG,MAAW;;AAC3D,MAAIA,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AACtC,WAAO;AACLJ,MAAAA,WAAW,EAAEE,KAAK,CAACF;AADd,KAAP;AAGD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO;AACLJ,MAAAA,WAAW,EAAGE,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACH;AADpC,KAAP;AAGD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;AACtC,WAAO;AACLJ,MAAAA,WAAW,EAAGE,KAAK,CAACF,WAAN,GAAoB;AAD7B,KAAP;AAGD;;AACD,SAAOE,KAAP;AACD,CAjBD;;AAkBA,MAAMI,WAAW,GAAG,YAAuC;AAAA,MAAtCJ,KAAsC,uEAA9B;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAA8B;AAAA,MAAXJ,MAAW;;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO;AACLG,MAAAA,SAAS,EAAEL,KAAK,CAACK;AADZ,KAAP;AAGD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO;AACLG,MAAAA,SAAS,EAAGL,KAAK,CAACK,SAAN,GAAkBJ,MAAM,CAACK;AADhC,KAAP;AAGD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO;AACLG,MAAAA,SAAS,EAAGL,KAAK,CAACK,SAAN,GAAkB;AADzB,KAAP;AAGD;;AACD,SAAOL,KAAP;AACD,CAjBD;;AAmBA,MAAMO,KAAK,GAAGZ,WAAW,CAACI,YAAD,EAAeI,WAAf,EAA4BC,WAA5B,CAAzB;AAEA,eAAeG,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = { loggedIn: false, userDetails: {} };\r\n\r\nconst loginReducer = (state = { loggedIn: false }, action) => {\r\n  if (action.type === \"checkLoginStatus\") {\r\n    return {\r\n      loggedIn: state.loggedIn,\r\n    };\r\n  }\r\n  if (action.type === \"setLogin\") {\r\n    return {\r\n      loggedIn: (state.loggedIn = true),\r\n    };\r\n  }\r\n  if (action.type === \"clearLogin\") {\r\n    return {\r\n      loggedIn: (state.loggedIn = false),\r\n    };\r\n  }\r\n  return state;\r\n};\r\nconst userReducer = (state = { userDetails: {} }, action) => {\r\n  if (action.type === \"checkUserDetails\") {\r\n    return {\r\n      userDetails: state.userDetails,\r\n    };\r\n  }\r\n  if (action.type === \"addUserDetails\") {\r\n    return {\r\n      userDetails: (state.userDetails = action.userDetails),\r\n    };\r\n  }\r\n  if (action.type === \"clearUserDetails\") {\r\n    return {\r\n      userDetails: (state.userDetails = {}),\r\n    };\r\n  }\r\n  return state;\r\n};\r\nconst cartReducer = (state = { cartItems: [] }, action) => {\r\n  if (action.type === \"getCartItems\") {\r\n    return {\r\n      cartItems: state.cartItems,\r\n    };\r\n  }\r\n  if (action.type === \"addCartItems\") {\r\n    return {\r\n      cartItems: (state.cartItems = action.item),\r\n    };\r\n  }\r\n  if (action.type === \"clearCartItems\") {\r\n    return {\r\n      cartItems: (state.cartItems = []),\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(loginReducer, userReducer, cartReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}